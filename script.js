// const number = prompt("Введите число:");

// if (number % 2 === 0) {
//   console.log("Число четное");
// } else {
//   console.log("Число нечетное");
// }

// Часто бывают ситуации когда нам необходимо выполнить одно и тоже действие много раз. 
// Пример из опыта,  часто выводим список товаров, создаем некоторое число элементов на html странице


// Пройдем все циклы и я расскажу в чем разница


// // while  ==== /* пока ~ в то время как */

/* Действия цикла называется итерация */

var i = 0
while(i <= 10) {
  console.log(i); /*  Без i++ ломается браузер*/
  i++             /* Потомучто значение переменной не изменеятся */
}




// do while 
// Проверку условия можно разместить под телом цикла, используя специальный синтаксис do..while:

var i = 0

do {
  console.log(i);
  ++i
} while (i < 5);
var i = 0

do { /* Сначала объяснить как работает цикл, затем добавить i++ и спросить почему выводит только четные числа */
  console.log(i);
  ++i 
  i++
} while (i < 5);



// for
/* Более сложный, но при этом самый распространённый цикл — цикл for. */

/* Пример из кода yearInP */
for (let index = 0; index < 10; index++) {
  console.log(index);
}
let answer = 1
for (let i = 1; i < 4; i++) {
  answer += i
// answer = answer + i 
  console.log(answer);
}
// закончим с циклами и расскажу про let, const, var

let answer = '1'
for (let i = 1; i < 4; i++) {
  answer += i
// answer = answer + i 
  console.log(answer);
}






















// ЗАДАНИЕ НА УРОКЕ ДЛЯ СТУДЕНТОВ

/* 

Факториал числа - это умножение от 1 до самого числа например (1 * 2 * 3 * 4 * 5) = 120
При помощи цикла вывести Факториал числа от 1 до 5 и вывести только конечный результат работы цикла. Цикл for

10 - 15 минут

*/

let answer = 1;
for(let i = 1; i < 6; i++) {
    answer = answer * i;
}
console.log(answer);


///////////// ТЕРНАРНЫЙ ОПЕРАТОР

let a = +prompt('Введите число')

a = !isNaN(a) ? a : 10;

console.log(a);

for(let i = 0; i <= a; i++) {
    console.log(i); 
}
